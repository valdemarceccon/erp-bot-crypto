name: Deploy

permissions: write-all

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_SG_INSTANCE }}
      VERSION: $(echo $GITHUB_SHA | cut -c1-7)
      APP_HOME: /home/ubuntu/app
    steps:
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: get runner ip address
      id: ip
      uses: haythem/public-ip@v1.3
    - name: whitelist runner ip address
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id $AWS_INSTANCE_SG_ID \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Bump docker-compose image versions
      run: |
        # You can customize this part to bump the versions as needed
        # Here's a simple example that updates the image tag to the commit SHA
        # export COMMIT_SHA=$(echo ${{ GITHUB_SHA }} | cut -c1-7)
        sed -i "s/:latest/:$VERSION/g" docker-compose.yml

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      uses: docker/bake-action@v3
      with:
        push: true

    - name: copy file via ssh key
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        source: "docker-compose.prod.yml"
        target: $APP_HOME

    - name: SSH and deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.REMOTE_HOST }}
        username: ${{ secrets.REMOTE_USER }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        script: |
          cd $APP_HOME
          docker compose -f docker-compose.prod.yml pull
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up -d

    - name: revoke runner ip address
      if: ${{ always() }}
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id $AWS_INSTANCE_SG_ID \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
