version: "3.8"

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev_123456
      POSTGRES_DB: dev
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  proxy:
    build:
      context: nginx-conf
      dockerfile: Dockerfile
    image: proxy:latest
    ports:
      - "80:80"
      - "8080:8080"

  frontend:
    build: frontend
    image: frontend:latest
    environment:
      ORIGIN: http://demo.localhost
      PORT: 3000
      BACKEND_PRIVATE_HOST: backend:8000
    ports:
      - "3000:3000"
    user: "1000:1000"
    volumes:
      - ./frontend:/app

  backend:
    build:
      context: backend
      dockerfile: Dockerfile.api
    image: backend:latest
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev_123456
      POSTGRES_HOST: db
      POSTGRES_DB: dev
      POSTGRES_URL: postgresql://dev:dev_123456@db/dev
      JWT_SECRET_KEY: your-secret-key
      JWT_ALGORITHM: HS256
      BASE_PATH: /api
      PORT: 8000

    ports:
      - 8000:8000

    volumes:
      - ./backend:/app

  # daemon:
  #   build:
  #     context: backend
  #     dockerfile: Dockerfile.daemon
  #   image: daemon:latest
  #   environment:
  #     POSTGRES_USER: dev
  #     POSTGRES_PASSWORD: dev_123456
  #     POSTGRES_HOST: db
  #     POSTGRES_DB: dev
  #     POSTGRES_URL: postgresql://dev:dev_123456@db/dev
  #     JWT_SECRET_KEY: your-secret-key
  #     JWT_ALGORITHM: HS256
  #   volumes:
  #     - ./backend/daemon:/app/daemon

  # migrate:
  #   build:
  #     context: backend
  #     dockerfile: Dockerfile.api
  #   image: backend:latest
  #   command: ["bash", "-c", "sleep 10 && alembic upgrade head"]
  #   depends_on:
  #     - db
  #   environment:
  #     POSTGRES_USER: dev
  #     POSTGRES_PASSWORD: dev_123456
  #     POSTGRES_HOST: db
  #     POSTGRES_DB: dev
  #     POSTGRES_URL: postgresql://dev:dev_123456@db/dev
  #   volumes:
  #     - ./backend:/app

volumes:
  db_data: {}
  # db_test: {}
