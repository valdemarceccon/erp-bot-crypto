"""Rbac

Revision ID: 6fefa0b968eb
Revises: 6c63057e83e1
Create Date: 2023-04-17 17:20:57.020109

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "6fefa0b968eb"
down_revision = "6c63057e83e1"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "role_permissions",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("role_id", "permission_id"),
    )
    op.create_table(
        "user_roles",
        sa.Column("user_id", sa.String(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.email"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
    )
    op.drop_index("ix_users_role_id", table_name="users_role")
    op.drop_index("ix_users_role_name", table_name="users_role")
    op.drop_constraint("users_role_id_fkey", "users", type_="foreignkey")
    op.drop_table("users_role")
    op.create_foreign_key("users_roles_fkey", "users", "roles", ["role_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("users_roles_fkey", "users", type_="foreignkey")
    op.create_table(
        "users_role",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="users_role_pkey"),
    )
    op.create_foreign_key(
        "users_role_id_fkey", "users", "users_role", ["role_id"], ["id"]
    )
    op.create_index("ix_users_role_name", "users_role", ["name"], unique=False)
    op.create_index("ix_users_role_id", "users_role", ["id"], unique=False)
    op.drop_table("user_roles")
    op.drop_table("role_permissions")
    op.drop_table("roles")
    op.drop_table("permissions")
    # ### end Alembic commands ###
